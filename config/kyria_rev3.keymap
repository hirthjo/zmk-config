/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define U_TAP_MS 10
#define U_WAIT_MS 10

#define DEFAULT 0
#define SYMBOL 1
#define FUNCTION 2

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        de_ss: de_ss {
            compatible = "zmk,behavior-macro";
            label = "de ss";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp S &kp S>;
        };
        euro: euro {
            compatible = "zmk,behavior-macro";
            label = "de euro";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp E &kp EQUAL>;
        };
        rev_accent: rev_accent {
            compatible = "zmk,behavior-macro";
            label = "reverse accent";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp APOS &kp APOS>;
        };
        de_ae: de_ae {
            compatible = "zmk,behavior-macro";
            label = "de ae";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp DQT &kp A>;
        };
        de_ae_shift: de_ae_shift {
            compatible = "zmk,behavior-macro";
            label = "de ae shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press     &kp LSHIFT>
                  , <&macro_tap     &kp CAPS &kp DQT &kp A>
                  , <&macro_release &kp LSHIFT>;
        };
        de_oe: de_oe {
            compatible = "zmk,behavior-macro";
            label = "de oe";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp DQT &kp O>;
        };
        de_oe_shift: de_oe_shift {
            compatible = "zmk,behavior-macro";
            label = "de oe shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press     &kp LSHIFT>
                  , <&macro_tap     &kp CAPS &kp DQT &kp O>
                  , <&macro_release &kp LSHIFT>;
        };
        de_ue: de_ue {
            compatible = "zmk,behavior-macro";
            label = "de ue";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings = <&macro_tap &kp CAPS &kp DQT &kp U>;
        };
        de_ue_shift: de_ue_shift {
            compatible = "zmk,behavior-macro";
            label = "de ue shift";
            #binding-cells = <0>;
            wait-ms = <U_WAIT_MS>;
            tap-ms = <U_TAP_MS>;
            bindings
                = <&macro_press     &kp LSHIFT>
                  , <&macro_tap     &kp CAPS &kp DQT &kp U>
                  , <&macro_release &kp LSHIFT>;
        };
        comsemi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dotcolon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slashpipe: slash_pipe {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            // ----------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  F    |  P   |  G   |                                          |  J   |  L    |  U    |  Y   |   -_  |   =+  |
            // |  TAB  |  A  |  R  |  S    |  T   |  D   |                                          |  H   |  N    |  E    |  I   |   O   |   '\" |
            // | SHIFT |  Z  |  X  |  C    |  V   |  B   |   GUI   | LAYER 1 |  | LAYER 2 | L SHIFT |  K   |  M    |  ,;   |  .:  |   /|  |   ~   |
            //                     |Compose| DEL  | CTRL |  SPACE  |   ALT   |  | LAYER 1 |  RET    | TAB  | Entf  | Einfg |
            bindings = <
            &kp ESC   &kp Q &kp W &kp F &kp P &kp G                                                  &kp J &kp L  &kp U     &kp Y     &kp MINUS  &kp EQUAL
            &kp TAB   &kp A &kp R &kp S &kp T &kp D                                                  &kp H &kp N  &kp E     &kp I     &kp O      &kp SQT
            &sk LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LGUI &mo SYMBOL           &mo FUNCTION   &kp RSHFT &kp K &kp M  &comsemi  &dotcolon &slashpipe &kp TILDE
                      &kp CAPS &kp BSPC &kp LCTRL &kp SPACE &kp LALT              &mo SYMBOL   &kp RET   &kp TAB &kp DEL &kp INS
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        symbol_layer {        
            label = "SYMBOL";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |   {  |  }   |  <  | up  |   >  | BUP  |                                            |  `   |   7  |   8   |   9   |  ss  |   ue  |
            // |   [  |  ]   | lft | dwn | Rght | BDwn |                                            |  ´   |   4  |   5   |   6   |  oe  |   ae  |
            // |   (  |  )   |     |     |      |      |           |         |  |         |         |      |   1  |   2   |   3   |      |       |
            //                     |     |      |      |           |         |  |         |         |      |   0  |       |
            bindings = <
            &kp LBRC &kp RBRC &kp LT   &kp UP   &kp GT    &kp PG_UP                          &kp GRAVE   &kp N7 &kp N8 &kp N9 &de_ss &de_ue
            &kp LBKT &kp RBKT &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN                          &rev_accent &kp N4 &kp N5 &kp N6 &de_oe &de_ae
            &kp LPAR &kp RPAR &trans &trans &trans &trans &trans &trans        &trans &trans &trans      &kp N1 &kp N2 &kp N3 &trans &trans
                                     &trans &trans &trans &trans &trans        &trans &trans &trans      &kp N0 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            label = "FUNCTION";
            // ----------------------------------------------------------------------------------------------------------------------------------
            // |       |      |  F7 |  F8  |  F9  |  F10 |                                          |      |  &   |   *   |  €    |  ss  |   ue  |
            // |       |      |  F4 |  F5  |  F6  |  F11 |                                          |      |  $   |   %   |  ^    |  oe  |   ae  |
            // |       |      |  F1 |  F2  |  F3  |  F12 |         |         |  |         |         |      |  !   |   @   |  #    |  \   |   ?   |
            //                      |      |      |      |         |         |  |         |         |      |      |       |
            bindings = <
            &trans   &trans  &kp F7 &kp F8 &kp F9 &kp F10                                            &trans &kp AMPS &kp STAR  &euro     &de_ss       &de_ue_shift
            &trans   &trans  &kp F4 &kp F5 &kp F6 &kp F11                                            &trans &kp DLLR &kp PRCNT &kp CARET &de_oe_shift &de_ae_shift
            &trans   &trans  &kp F1 &kp F2 &kp F3 &kp F12 &trans &trans            &trans   &trans   &trans &kp EXCL &kp AT    &kp HASH  &kp BSLH     &kp QMARK
                                     &trans &trans &trans &trans &trans            &trans   &trans   &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
